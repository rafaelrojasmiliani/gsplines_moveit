# build docker files with the gsplines installed
name: compilation
on: push
jobs:
  deploy:
    name: build image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - image_name: "rafa606/gsplines-moveit-vim:noetic"
            base_image: "rafa606/ros-vim:noetic"
            ros_distro: "noetic"
    steps:
      - name: checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Check last modified time of Foo Dockerfile
        id: image_modify_date
        run: |
          echo "image=$(date -d "$(curl -s https://hub.docker.com/v2/repositories/"$(echo ${{ matrix.docker_image.image_name }} | sed 's/:/\/tags\//')" | jq -r '.last_updated')" +%s)" >> $GITHUB_OUTPUT;
          echo "base_image=$(date -d "$(curl -s https://hub.docker.com/v2/repositories/"$(echo ${{ matrix.docker_image.base_image }} | sed 's/:/\/tags\//')" | jq -r '.last_updated')" +%s)" >> $GITHUB_OUTPUT;

      - name: Check last modified time of Foo Docker image
        id: file_modify_date
        run: |
          echo "docker_file=$(date -d "$(git log -1 --format=%cd --date=iso -- ./docker/docker.dockerfile)" +%s)" >> $GITHUB_OUTPUT
          echo "gsplines_cpp=$(date -d "$(git log -1 --format=%cd --date=iso -- ./gsplines_cpp)" +%s)" >> $GITHUB_OUTPUT
          echo "gsplines_moveit=$(date -d "$(git log -1 --format=%cd --date=iso -- ./gsplines_moveit)" +%s)" >> $GITHUB_OUTPUT
          echo "opstop_ros=$(date -d "$(git log -1 --format=%cd --date=iso -- ./opstop_ros)" +%s)" >> $GITHUB_OUTPUT
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build and push ${{ matrix.docker_image.image_name }}
        uses: docker/build-push-action@v3
        with:
          tags: ${{ matrix.docker_image.image_name }}
          file: docker/docker.dockerfile
          push: true
          build-args: |
            BASEIMAGE=${{ matrix.docker_image.base_image }}
            ROS_DISTRO=${{ matrix.docker_image.ros_distro }}
        if: |
          steps.image_modify_date.outputs.image < steps.file_modify_date.outputs.docker_file ||
          steps.image_modify_date.outputs.image < steps.file_modify_date.outputs.gsplines_cpp ||
          steps.image_modify_date.outputs.image < steps.file_modify_date.outputs.opstop_ros ||
          steps.image_modify_date.outputs.image < steps.file_modify_date.outputs.gsplines_moveit ||
          steps.image_modify_date.outputs.image < steps.image_modify_date.outputs.base_image
