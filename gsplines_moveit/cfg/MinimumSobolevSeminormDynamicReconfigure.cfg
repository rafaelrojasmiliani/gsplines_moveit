#!/usr/bin/python3
"""
Dynamic reconfigure definition for our minimum sobolev norm
"""
from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator
from dynamic_reconfigure.parameter_generator_catkin import double_t, int_t
from dynamic_reconfigure.parameter_generator_catkin import str_t


def _level():
    """steadily increases to provide level value"""
    start = 0
    while True:
        yield start
        start += 1


GENERATOR = _level()


def level():
    """Converts generator into a integer"""
    return next(GENERATOR)


PACKAGE = "gsplines_moveit"
MAX_SOBOL_DEGREE = 5
MAX_POLYNOMIAL_DEGREE = 12
GEN = ParameterGenerator()

OPT_TYPE = GEN.enum([
    GEN.const('MinimumVelocity', int_t, 0,
              'Velocity norm minimization'),
    GEN.const('MinimumAcceleration', int_t, 1,
              'Rojas Basis'),
    GEN.const('MinimumJerk', int_t, 2,
              'Jerk minimization'),
    GEN.const('Rojas', int_t, 3,
              'Rojas optimization'),
    GEN.const('Custom', int_t, 4,
              'Custom optimization' +
              ', use the custom optimization group')
], "An enum to set the basis")


GEN.add("OptimizationType", int_t, level(), 'Type of optimization',
        0, edit_method=OPT_TYPE)

MINVEL_GROUP = GEN.add_group("Minimum Velocity Polynomial degree")
MINVEL_GROUP.add("PolynomialDegree", int_t, level(),
                 "degree of the polynomial", 3, 3, 12)

ROJAS_GROUP = GEN.add_group('Rojas optimization parameter')
ROJAS_GROUP.add("kFactor", double_t, level(),
                "K factor for basis 0101", 0.01, 0.0001, 100)


CUSTOM_OPT_GROUP = GEN.add_group('Custom Optimization Parameters')
for derivDegree in range(1, 6):
    CUSTOM_OPT_GROUP.add("weight{:d}".format(
        derivDegree), double_t, level(), "", 0, 0, 1.0)

BASIS_ENUM = GEN.enum([GEN.const('BasisLagragne', str_t, 'BasisLagrange',
                                 'Lagrange Basis'),
                       GEN.const('BasisLegendre', str_t, 'BasisLegendre',
                                 'Legendre Basis'),
                       GEN.const('Basis0101', str_t, 'Basis0101',
                                 'Rojas Basis')],
                      "An enum to set the basis")

CUSTOM_OPT_GROUP.add("size", str_t, level(), 'Basis taype',
                     'BasisLegendre', edit_method=BASIS_ENUM)

exit(GEN.generate(PACKAGE, PACKAGE,
                  "MinimumSobolevSeminormDynamicReconfigure"))
